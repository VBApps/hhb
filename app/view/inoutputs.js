/*
 * File: app/view/inoutputs.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('hhb.view.inoutputs', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.inoutputs',

    requires: [
        'hhb.view.inoutputsViewModel',
        'Ext.grid.column.Check',
        'Ext.grid.column.Date',
        'Ext.view.Table',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'inoutputs'
    },
    reference: 'inoutputs',
    id: 'inoutputs',
    itemId: 'inoutputs',
    scrollable: true,
    allowDeselect: true,
    columnLines: true,
    emptyText: 'Keine Datens&auml;tze vohanden',
    forceFit: true,
    store: 'inoutputsStore',

    columns: [
        {
            xtype: 'checkcolumn',
            hidden: true,
            width: 60,
            dataIndex: 'booked',
            stopSelection: false
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'id',
            text: 'Nummer'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'name',
            text: 'Verwendungszweck',
            flex: 1
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return value + ' ' + record.data.currency;
            },
            dataIndex: 'amount',
            text: 'Betrag'
        },
        {
            xtype: 'datecolumn',
            dataIndex: 'date',
            text: 'Datum'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if (value) {
                    return '<img src="resources/icons/accept.png" style="display: block;margin: 0 auto;">';
                } else {
                    return '<img src="resources/icons/stop.png" style="display: block;margin: 0 auto;">';
                }
            },
            dataIndex: 'booked',
            text: 'gebucht'
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            style: 'background:#e8e8e8;',
            defaults: {
                scale: 'medium'
            },
            items: [
                {
                    xtype: 'button',
                    height: 35,
                    itemId: 'btnrefresh',
                    style: {
                        color: 'blue'
                    },
                    iconCls: 'fa fa-refresh fa-2x'
                },
                {
                    xtype: 'button',
                    height: 35,
                    itemId: 'newinout',
                    style: {
                        color: 'green'
                    },
                    iconCls: 'fa fa-plus-circle fa-2x',
                    text: 'Hinzuf&uuml;gen'
                },
                {
                    xtype: 'button',
                    bind: {
                        disabled: '{!inoutputs.selection}'
                    },
                    disabled: true,
                    height: 35,
                    style: {
                        color: 'red'
                    },
                    iconCls: 'fa fa-minus-circle fa-2x',
                    text: 'Entfernen'
                }
            ]
        }
    ]

});